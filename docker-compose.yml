version: "3.7"

networks:
  backend:
    name: ${NETWORK_NAME}
    driver: bridge

services:
  redis:
    image: redis
    restart: always
    networks:
      - backend

  db:
    image: mdillon/postgis:11
    restart: always
    env_file: .env
    ports:
      - "${DB_PORT}:5432"
    networks:
      - backend
    volumes:
      - ./data/postgisdb:/var/lib/postgresql/data

  nginx: # теперь устанавливать nginx в саму систему не нужно
    image: nginx:alpine
    env_file: .env
    # обязательно передаём нужные переменные для envsubst, иначе перетрёт ненужное.
    # Вдобавок в docker-compose в блоке command надо брать переменные через двойной доллар - $$
    command: >
      /bin/sh -c "envsubst '$${WSGI_PORT},$${ASGI_PORT}, $${NGINX_PORT}, $${HOST_DOMAIN}' < /etc/nginx/${NGINX_CONF_TEMPLATE} > /etc/nginx/conf.d/project.conf && nginx -g 'daemon off;'"
    networks:
      - backend
    restart: always
    depends_on:
      - asgi
      - wsgi
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    volumes:
      - "${BACKEND_FOLDER}/nginx/${NGINX_CONF_TEMPLATE}:/etc/nginx/${NGINX_CONF_TEMPLATE}"
      - ./files:/project_files/
      # Прокидываем всю папку letsencrypt, т.к. без внутри контейнера символьные ссылки не видят внешние файлы
      - /etc/letsencrypt:/etc/letsencrypt

  wsgi:
    image: ${CI_REGISTRY_IMAGE}:$CI_ENVIRONMENT_NAME
    restart: always
    env_file: .env
    command: bash -c "python3 manage.py migrate && python3 manage.py seed all && python3 manage.py collectstatic --noinput && gunicorn -c config.py good_gauntlet_generator.wsgi --log-level debug"
    volumes:
      - ./files:/code/files
    ports:
      - "127.0.0.1:${WSGI_PORT}:${WSGI_PORT}"
    depends_on:
      - redis
      - db
    networks:
      - backend
